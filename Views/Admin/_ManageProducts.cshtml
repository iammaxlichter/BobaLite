@model IEnumerable<BobaLite.Models.Product>

@* 
    Admin Products Management View
    - Allows adding new products with variants and images.
    - Displays a list of products with edit and delete options.
    - Supports inline editing of selected product details.
*@

<section class="admin-products">

    <!-- Add Products Form -->
    <h3>Add Products</h3>
    <form method="post" action="/Admin/AddProduct" class="add-product-form" enctype="multipart/form-data">
        <input type="text" name="name" placeholder="New product name" required />

        <select name="productType" id="productType" required>
            <option disabled selected>Select type</option>
            <option value="Drink">Drink</option>
            <option value="Apparel">Apparel</option>
        </select>

        <div id="variantFileInputs">
            <!-- JS will populate this -->
        </div>

        <button type="submit">Add Product</button>
    </form>

    <!-- Edit Products Table -->
    <h3>Edit Products</h3>
    <table class="admin-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Stock</th>
                <th>Categories</th>
                <th>isActive</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @{
                var editId = ViewBag.EditProductId as int?;
            }

            @foreach (var product in Model)
            {
                var isEditing = editId == product.Id;

                if (isEditing)
                {
                    <tr>
                        <form method="post" action="/Admin/SaveProduct" enctype="multipart/form-data">
                            <input type="hidden" name="productId" value="@product.Id" />

                            <!-- Product Name -->
                            <td>
                                <input type="text" name="newName" value="@product.Name" required style="width: 200px;" />
                            </td>

                            <!-- Variant Stocks, Prices and Image Upload -->
                            <td>
                                <ul style="list-style-type: none; padding-left: 0;">
                                    @for (int i = 0; i < product.Variants.Count; i++)
                                    {
                                        var variant = product.Variants[i];
                                        <li class="variant-edit-row">
                                            <strong>@variant.Attributes:</strong>
                                            <input type="hidden" name="variantIds" value="@variant.Id" />
                                            <input type="number" name="newStocks" value="@variant.Stock" min="0" />
                                            <span>$</span>
                                            <input type="number" name="newPrices" value="@variant.Price.ToString("0.00")" min="0" step="0.01" />
                                            <input type="file" name="variantImages[]" accept="image/*" />
                                        </li>
                                    }
                                </ul>
                            </td>

                            <!-- Product Categories -->
                            <td>
                                <ul style="list-style-type: none; padding-left: 0;">
                                   @{
                                        var categories = (List<BobaLite.Models.Category>)ViewBag.AllCategories;
                                        var childCategoryIds = new HashSet<int>(
                                            categories.Where(c => c.ParentCategoryId != null)
                                                    .Select(c => c.ParentCategoryId!.Value)
                                        );
                                    }

                                    @foreach (var category in categories.Where(c => !childCategoryIds.Contains(c.Id)))
                                    {
                                        var isChecked = product.ProductCategories.Any(pc => pc.CategoryId == category.Id);
                                        <li>
                                            <label>
                                                <input type="checkbox" name="categoryIds" value="@category.Id" @(isChecked ? "checked" : "") />
                                                @category.Name
                                            </label>
                                        </li>
                                    }
                                </ul>
                            </td>

                            <!-- Is Active Checkbox -->
                            <td class="is-active-col">
                                <input type="checkbox" name="isActive" value="true" @(product.IsActive ? "checked" : "") />
                            </td>

                            <!-- Save and Cancel -->
                            <td>
                                <button class="save-btn" type="submit">Save</button>
                                <a href="/Admin/Index" class="cancel-btn">Cancel</a>
                            </td>

                            <!-- Delete Product -->
                            <td>
                                <form method="post" action="/Admin/DeleteProduct"
                                    onsubmit="return confirm('Are you sure you want to delete this product?');"
                                    style="display:inline;">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <button type="submit" class="delete-btn">Delete</button>
                                </form>
                            </td>
                        </form>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@product.Name</td>

                        <td>
                            <ul style="list-style-type: none; padding-left: 0;">
                                @foreach (var variant in product.Variants)
                                {
                                    <li>
                                        <strong>@variant.Attributes:</strong> @variant.Stock in stock, $@variant.Price
                                    </li>
                                }
                            </ul>
                        </td>

                        <td>@string.Join(", ", product.ProductCategories.Select(pc => pc.Category.Name))</td>

                        <td>
                            @(product.IsActive ? "Active" : "Inactive")
                        </td>

                        <td>
                            <form method="get" action="/Admin/Index" style="display:inline;">
                                <input type="hidden" name="editProductId" value="@product.Id" />
                                <button class="edit-btn" type="submit">Edit</button>
                            </form>
                        </td>
                        <td>
                            <form method="post" action="/Admin/DeleteProduct"
                                onsubmit="return confirm('Are you sure you want to delete this product?');"
                                style="display:inline;">
                                <input type="hidden" name="productId" value="@product.Id" />
                                <button type="submit" class="delete-btn">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</section>
